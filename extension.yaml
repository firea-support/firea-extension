# Copyright 2022 Mark.One GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: firea-sync
version: 0.2.0 
specVersion: v1beta

displayName: Firea.io
description:
  Supercharge your Firestore Database

license: Apache-2.0

sourceUrl: https://github.com/firea-support/firea-extension
releaseNotesUrl: https://github.com/firea-support/firea-extension/blob/main/CHANGELOG.md

author:
  authorName: Firebase
  url: https://firebase.google.com

contributors:
  - authorName: firea.io
    email: support@firea.io
    url: https://www.firea.io/

billingRequired: true

roles:
  - role: datastore.user
    reason: Allows the extension to work properly

resources:
  - name: fireaSyncDocument
    type: firebaseextensions.v1beta.function
    description:
      Listens for writes of new strings to your specified Cloud Firestore collection and streams them to firea.io backend
    properties:
      location: ${param:LOCATION}
      runtime: nodejs14
      sourceDirectory: functions
      timeout: 10s
      eventTrigger:
        eventType: providers/cloud.firestore/eventTypes/document.write
        resource: projects/${param:PROJECT_ID}/databases/(default)/documents/${param:COLLECTION_PATH}/{docId}

  - name: fireaAggregate
    type: firebaseextensions.v1beta.function
    description:
      Authenticated cloud function that can be called via your Firebase SDK
    properties:
      location: ${param:LOCATION}
      runtime: nodejs14
      sourceDirectory: functions
      timeout: 15s
      httpsTrigger: {}

  - name: fireaBackfillData
    type: firebaseextensions.v1beta.function
    description: >-
      If enabled, the extension will backfill your firestore data to the Firea.io Backend
    properties:
      location: ${LOCATION}
      taskQueueTrigger: {}

lifecycleEvents:
  onInstall:
    function: fireaBackfillData
    processingMessage: Check if existing documents must be backfilled
  onUpdate:
    function: fireaBackfillData
    processingMessage: Check if existing documents must be backfilled
  onConfigure:
    function: fireaBackfillData
    processingMessage: Check if existing documents must be backfilled

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your database. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Taiwan (asia-east1)
        value: asia-east1
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Singapore (asia-southeast1)
        value: asia-southeast1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true

  - param: COLLECTION_PATH
    label: Collection path
    description: >
      What is the path to the collection? Use Wildcards for nested collections e.g. companies/{companyId}/transactions
    example: transactions
    validationRegex: "^[^/]+(/[^/]+/[^/]+)*$"
    validationErrorMessage: Must be a valid Cloud Firestore Collection
    default: transactions
    required: true

  - param: F_PROJECT_ID
    label: Firea Project ID
    description: >
      Go to your Firea.io console and copy your project id
    example: some_project_id
    default: some_project_id
    required: true

  - param: PROJECT_API_KEY
    label: Firea Project API Key
    description: >
      Go to your Firea.io console and copy your api key
    example: some_api_key
    default: some_api_key
    required: true

  - param: DO_BACKFILL
    label: Do you want to backfill all your existing data?
    description: >-
      This requires you to have Blaze plan enabled on your Firea.io Account
      You can always manually trigger a backfill later from your Firea.io console
    type: select
    default: true
    required: true
    immutable: true
    options:
      - label: Yes
        value: true
      - label: No
        value: false